/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

import org.gradle.jvm.tasks.Jar
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    kotlin("jvm") version "1.3.50"

    java

    // Apply the application plugin to add support for building a CLI application.
    application
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("io.vertx:vertx-core:3.8.3")
    implementation("io.vertx:vertx-web:3.8.3")
    implementation("io.vertx:vertx-config:3.8.3")
    implementation("io.vertx:vertx-kafka-client:3.8.3")
    implementation("io.vertx:vertx-mongo-client:3.8.3")

    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.5.2")
    testImplementation("org.hamcrest:hamcrest-all:1.3")
    testImplementation("io.vertx:vertx-junit5:3.8.3")
    testImplementation("com.salesforce.kafka.test:kafka-junit5:3.1.1")
    testImplementation("com.salesforce.kafka.test:kafka-junit-core:3.1.1")
    testImplementation("org.apache.kafka:kafka_2.12:2.3.0")
    testImplementation("org.apache.kafka:kafka-clients:2.3.0")
    testImplementation("org.junit.vintage:junit-vintage-engine:5.5.2")
    testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
    testImplementation("org.apache.curator:curator-framework:4.0.1")
    testImplementation("org.apache.curator:curator-test:4.0.1")
    testImplementation("org.testcontainers:kafka:1.12.3")
    testImplementation("org.testcontainers:junit-jupiter:1.12.3")

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.2")
}

application {
    // Define the main class for the application
    mainClassName = "news.reporter.app.ApplicationKt"
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

tasks.register<Jar>("uberJar") {

    manifest {
        attributes["Main-Class"] = application.mainClassName
    }

    from(sourceSets.main.get().output)
    dependsOn(configurations.runtimeClasspath)
    from({
        configurations.runtimeClasspath.get().filter { it.name.endsWith("jar") }.map { zipTree(it) }
    })
}

tasks.build {
    dependsOn("uberJar")
}

tasks {
    withType<KotlinCompile> {
        kotlinOptions.jvmTarget = "1.8"
    }
}